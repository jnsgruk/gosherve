name: Build Gosherve

on:
  push:
    tags: ["*"]
  release:
    types: [published]
  pull_request:
    branches: ["master"]

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]
    
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "go.mod"
      
      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.ref }}" =~ "refs/tags" ]]; then
            VERSION="$(echo ${{ github.ref }} | cut -d "/" -f3)"
          else
            VERSION="$(git rev-parse --short HEAD)"
          fi
          echo "VERSION=${VERSION}" >>$GITHUB_OUTPUT

      - name: Build gosherve
        id: build
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          FILENAME="gosherve-${VERSION}-${GOOS}-${GOARCH}"
          go build -o "./bin/${FILENAME}" main.go
          echo "GOSHERVE_BINARY=${FILENAME}" >>$GITHUB_OUTPUT
      
      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.build.outputs.GOSHERVE_BINARY }}
          path: bin/${{ steps.build.outputs.GOSHERVE_BINARY }}

      - name: Upload binary to release
        if: ${{ github.event_name == 'release' }}
        env:
          VERSION: ${{ steps.version.outputs.VERSION }}
          OS: ${{ matrix.goos }}
          ARCH: ${{ matrix.goarch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$VERSION" "bin/gosherve-${VERSION}-${OS}-${ARCH}"
